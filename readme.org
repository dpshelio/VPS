* Visualiser of Positional Astronomy concepts
#+begin_src python
  import matplotlib.pyplot as plt
  import numpy as np

  from matplotlib.patches import Circle, PathPatch, FancyArrowPatch
  from matplotlib.text import TextPath
  from matplotlib.transforms import Affine2D
  import mpl_toolkits.mplot3d.art3d as art3d
  from mpl_toolkits.mplot3d import proj3d

  class Arrow3D(FancyArrowPatch):
      """

      From: https://stackoverflow.com/a/74122407/1087595 by https://stackoverflow.com/users/3157428/ruli
      """
      def __init__(self, xs, ys, zs, *args, **kwargs):
          super().__init__((0,0), (0,0), *args, **kwargs)
          self._verts3d = xs, ys, zs

      def do_3d_projection(self, renderer=None):
          xs3d, ys3d, zs3d = self._verts3d
          xs, ys, zs = proj3d.proj_transform(xs3d, ys3d, zs3d, self.axes.M)
          self.set_positions((xs[0],ys[0]),(xs[1],ys[1]))

          return np.min(zs)


  fig = plt.figure()
  ax = fig.add_subplot(projection='3d')

  # Draw a circle for the horizont
  p = Circle((5, 5), 5, alpha=0.5)
  ax.add_patch(p)
  art3d.pathpatch_2d_to_3d(p, z=0, zdir="z")

  # Draw great circle NZS
  p = Circle((5, 0), 5, fill=False, linestyle='-')
  ax.add_patch(p)
  art3d.pathpatch_2d_to_3d(p, z=5, zdir="y")
  # Draw great circle EZW
  p = Circle((5, 0), 5, fill=False, linestyle=':')
  ax.add_patch(p)
  art3d.pathpatch_2d_to_3d(p, z=5, zdir="x")

  # Add labels N, E, S, W, Z
  coord = [((-0.5, 5, 0), "N"),
             ((5, 10.5, 0), "E"),
             ((10.5, 5, 0), "S"),
             ((5, -0.5, 0), "W"),
             ((5,5, 5.2), "Z")]
  for location, label in coord:
      ax.text(*location, label, None, horizontalalignment='center', size='medium')

  # Display NP and equator
  latitude = 45
  lat_r = np.deg2rad(latitude)
  center = (5, 5, 0)
  north_pole = (5 - 5.3 * np.cos(lat_r), 5, 5.3 * np.sin(lat_r))
  #ax.arrow(*zip(center, np), 0)
  arrow_prop_dict = dict(mutation_scale=20, arrowstyle='-|>', color='k', shrinkA=0, shrinkB=0)
  a = Arrow3D(*zip(center, north_pole), **arrow_prop_dict)
  ax.add_artist(a)
  ax.text(*north_pole, "NP", None, horizontalalignment='center', size='medium')

  ax.set_xlim(-1, 11)
  ax.set_ylim(-1, 11)
  ax.set_zlim(-6, 6)
  ax.set_aspect('equal')
  plt.show()
